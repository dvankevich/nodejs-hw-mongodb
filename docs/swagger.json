{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Simple contacts App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Very simple minimalistic contacts app."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://hw2-mongodb-41jp.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operation with contacts."
    }
  ],
  "paths": {
    "/contacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "contactType",
                  "userId",
                  "createdAt",
                  "updatedAt"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Contact name.",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone number.",
                    "example": "+380000000221"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address.",
                    "example": "johndoe@example.com"
                  },
                  "isFavorite": {
                    "type": "boolean",
                    "description": "is favorite flag.",
                    "example": true
                  },
                  "contactType": {
                    "type": "string",
                    "description": "contact type.",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "personal"
                  },
                  "userId": {
                    "type": "string",
                    "description": "ID of the contact's user.",
                    "example": "674dc213e880c5a6c4e30b19"
                  },
                  "photo": {
                    "type": "string",
                    "description": "Link to contact's photo",
                    "example": "https://res.cloudinary.com/uqwgdu/image/upload/default.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by Id.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "contactId.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "678cfb412d5639e15b550312"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 678cf83a1432dd1df8280cda"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid contactId"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Contact not found."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "contactType",
          "userId",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Contact Id.",
            "example": "674c7ea11a75750f5f9b86d4"
          },
          "name": {
            "type": "string",
            "description": "Contact name.",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number.",
            "example": "+380000000221"
          },
          "email": {
            "type": "string",
            "description": "Email address.",
            "example": "johndoe@example.com"
          },
          "isFavorite": {
            "type": "boolean",
            "description": "is favorite flag.",
            "example": true
          },
          "contactType": {
            "type": "string",
            "description": "contact type.",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "personal"
          },
          "userId": {
            "type": "string",
            "description": "ID of the contact's user.",
            "example": "674dc213e880c5a6c4e30b19"
          },
          "photo": {
            "type": "string",
            "description": "Link to contact's photo",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/default.png"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}