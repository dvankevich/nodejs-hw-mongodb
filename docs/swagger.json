{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Simple contacts App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Very simple minimalistic contacts app."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://hw2-mongodb-41jp.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operation with contacts."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contacts",
        "operationId": "getContacts",
        "description": "Get contacts records. You can use query parameters",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 5
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "contactType",
                "isFavourite",
                "email",
                "createdAt",
                "updatedAt"
              ],
              "example": "name"
            },
            "description": "field to sort by"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "home"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "678cfb412d5639e15b550312"
                              },
                              "name": {
                                "type": "string",
                                "example": "MyName"
                              },
                              "phoneNumber": {
                                "type": "string",
                                "example": "+380000000221"
                              },
                              "isFavourite": {
                                "type": "boolean",
                                "example": false
                              },
                              "contactType": {
                                "type": "string",
                                "example": "work"
                              },
                              "userId": {
                                "type": "string",
                                "example": "678bf83e14d55985f0900f60"
                              },
                              "photo": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://res.cloudinary.com/dvc0lg6q7/image/upload/v1737883765/k6dvouzwwey3axxnenxx.png"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-01-19T13:16:49.317Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-01-26T09:29:26.010Z"
                              }
                            }
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 1
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 1
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "contactType",
                  "userId",
                  "createdAt",
                  "updatedAt"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Contact name.",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone number.",
                    "example": "+380000000221"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address.",
                    "example": "johndoe@example.com"
                  },
                  "isFavorite": {
                    "type": "boolean",
                    "description": "is favorite flag.",
                    "example": true
                  },
                  "contactType": {
                    "type": "string",
                    "description": "contact type.",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "personal"
                  },
                  "userId": {
                    "type": "string",
                    "description": "ID of the contact's user.",
                    "example": "674dc213e880c5a6c4e30b19"
                  },
                  "photo": {
                    "type": "string",
                    "description": "Link to contact's photo",
                    "example": "https://res.cloudinary.com/uqwgdu/image/upload/default.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by Id.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "contactId.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "678cfb412d5639e15b550312"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 678cf83a1432dd1df8280cda"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Patch contact",
        "operationId": "patchContact",
        "description": "Modify a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "678bf8af14d55985f0900f6e"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Contact name.",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone number.",
                    "example": "+380000000221"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address.",
                    "example": "johndoe@example.com"
                  },
                  "isFavorite": {
                    "type": "boolean",
                    "description": "is favorite flag.",
                    "example": true
                  },
                  "contactType": {
                    "type": "string",
                    "description": "contact type.",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "personal"
                  },
                  "userId": {
                    "type": "string",
                    "description": "ID of the contact's user.",
                    "example": "674dc213e880c5a6c4e30b19"
                  },
                  "photo": {
                    "type": "string",
                    "description": "Link to contact's photo",
                    "example": "https://res.cloudinary.com/uqwgdu/image/upload/default.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact by ID",
        "operationId": "deleteContact",
        "description": "Delete a contact by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "678bf8af14d55985f0900f6e"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete contact by id"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register new user",
        "description": "New user registration",
        "operationId": "authRegister",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "teacher01@mail.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "Teacher01"
                  },
                  "password": {
                    "type": "string",
                    "example": "Pa$$w0rd"
                  }
                }
              },
              "examples": {
                "/auth/register": {
                  "value": {
                    "email": "teacher01@mail.com",
                    "name": "Teacher01",
                    "password": "Pa$$w0rd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/userRegister"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Logs in a user with email and password.",
        "security": [],
        "requestBody": {
          "description": "Credentials for login.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address.",
                    "example": "jconnor@skynet.mil"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User password.",
                    "example": "SecretPassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully user logged.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "Access token.",
                          "example": "nWlVaC8bxPl9psLO8sCM0MFjFUbcxnXXOPgoPNwj"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "operationId": "logoutUser",
        "description": "User log out.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "sessionId",
            "description": "User session Id.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "j%3A%2267967ae6737a46114f32bb6a%22"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully user logout. No content returned."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUserSession",
        "description": "Refresh user session and generate new access token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Refresh token and session Id.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sessionId",
                  "refreshToken"
                ],
                "properties": {
                  "sessionId": {
                    "type": "string",
                    "description": "session Id.",
                    "example": "\tj%3A%2267967f03b4f40be22f0f28f7%22"
                  },
                  "refreshToken": {
                    "type": "string",
                    "description": "Refresh token.",
                    "example": "aC1eOdtnyBjx%2F0oC9uWKFK9BwgV3JsCW7LuA53%2Fi"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed user session.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "New access token.",
                          "example": "r4bd5b/uIL8uzPw+iqPTijsLy3zpSwOkDEA0U8zM"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send reset password email",
        "operationId": "sendResetEmail",
        "description": "Send email with a password reset link.",
        "security": [],
        "requestBody": {
          "description": "User email.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address.",
                    "example": "jconnor@skynet.mil"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully sent password reset email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "status",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email was successfully sent!"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "description": "Reset password with reset token and new password.",
        "security": [],
        "requestBody": {
          "description": "Reset token from email and new password.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Reset token.",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NzhiZjgzZTE0ZDU1OTg1ZjA5MDBmNjAiLCJlbWFpbCI6ImR2YW5rZXZpY2hANXByby1zb2Z0d2FyZS5uZXQiLCJpYXQiOjE3MzcyMjkwOTMsImV4cCI6MTczNzIyOTk5M30.Eloifgrr6wRLAxLXaMunnbjlaR7QPrU89JVcp2i0"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "New user password.",
                    "example": "NewPa$$word"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated password.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password was successfully reset!"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request. Invalid parameter."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired or Session not found."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Fount Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "The HTTP 409 Conflict client error response status code indicates a request conflict with the current state of the target resource.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "description": "HTTP error status.",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "description": "Error name.",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "description": "Details about the error.",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error explanation.",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "contactType",
          "userId",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Contact Id.",
            "example": "674c7ea11a75750f5f9b86d4"
          },
          "name": {
            "type": "string",
            "description": "Contact name.",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number.",
            "example": "+380000000221"
          },
          "email": {
            "type": "string",
            "description": "Email address.",
            "example": "johndoe@example.com"
          },
          "isFavorite": {
            "type": "boolean",
            "description": "is favorite flag.",
            "example": true
          },
          "contactType": {
            "type": "string",
            "description": "contact type.",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "personal"
          },
          "userId": {
            "type": "string",
            "description": "ID of the contact's user.",
            "example": "674dc213e880c5a6c4e30b19"
          },
          "photo": {
            "type": "string",
            "description": "Link to contact's photo",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/default.png"
          }
        }
      },
      "userRegister": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "description": "User name",
            "type": "string",
            "example": "My Name"
          },
          "email": {
            "description": "User email",
            "type": "string",
            "example": "myname@mail.com"
          },
          "password": {
            "description": "User password",
            "type": "string",
            "example": "SuperPassword"
          }
        }
      }
    }
  }
}